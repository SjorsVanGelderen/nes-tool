struct Palette {
    // color_indices: [u32; 26],
}

impl Palette {
    fn zero() -> Palette {
        Palette {
            // color_indices = 
        }
    }

    // fn set_color_index(&self, which: i32, color_index: i32) -> PaletteData {
    //     let mut color_indices = self.color_indices;
    //     color_indices[which] = color_index;

    //     Palette { color_indices: color_indices, ..self }
    // }
}

// static PALETTE: [u8; 192] =
//   [ 101; 101; 101
//   ;   3;  47; 103
//   ;  21;  35; 125
//   ;  60;  26; 122
//   ;  95;  18;  97
//   ; 114;  14;  55
//   ; 112;  16;  13
//   ;  89;  26;   5
//   ;  52;  40;   3
//   ;  13;  51;   3
//   ;   3;  59;   4
//   ;   4;  60;  19
//   ;   3;  56;  63
//   ;   0;   0;   0
//   ;   0;   0;   0
//   ;   0;   0;   0
  
//   ; 174; 174; 174
//   ;  15;  99; 179
//   ;  64;  81; 208
//   ; 120;  65; 204
//   ; 167;  54; 169
//   ; 192;  52; 112
//   ; 189;  60;  48
//   ; 159;  74;   0
//   ; 109;  92;   0
//   ;  54; 109;   0
//   ;   7; 119;   4
//   ;   0; 121;  61
//   ;   0; 114; 125
//   ;   0;   0;   0
//   ;   0;   0;   0
//   ;   0;   0;   0

//   ; 254; 254; 255
//   ;  93; 179; 255
//   ; 143; 161; 255
//   ; 200; 144; 255
//   ; 247; 133; 250
//   ; 255; 131; 192
//   ; 255; 138; 127
//   ; 239; 154;  73
//   ; 189; 172;  44
//   ; 133; 188;  47
//   ;  85; 199;  83
//   ;  60; 201; 140
//   ;  62; 194; 205
//   ;  78;  78;  78
//   ;   0;   0;   0
//   ;   0;   0;   0

//   ; 254; 254; 255
//   ; 188; 223; 255
//   ; 209; 216; 255
//   ; 232; 209; 255
//   ; 251; 205; 253
//   ; 255; 204; 229
//   ; 255; 207; 202
//   ; 248; 213; 180
//   ; 228; 220; 168
//   ; 204; 227; 169
//   ; 185; 232; 184
//   ; 174; 232; 208
//   ; 175; 229; 234
//   ; 182; 182; 182
//   ;   0;   0;   0
//   ;   0;   0;   0
//   ];